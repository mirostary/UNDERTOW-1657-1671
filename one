void parse(String string, HttpServerExchange exchange, String charset, boolean doDecode, int max) throws ParameterLimitException {
            int count = 0;

            try {
                int stringStart = 0;
                String attrName = null;

                for(int i = 0; i < string.length(); ++i) {
                    char c = string.charAt(i);
                    if (c == '=' && attrName == null) {
                        attrName = string.substring(stringStart, i);
                        stringStart = i + 1;
                    } else if (c == '&') {
                        if (attrName != null) {
                            this.handle(exchange, this.decode(charset, attrName, doDecode), this.decode(charset, string.substring(stringStart, i), doDecode));
                            ++count;
                            if (count > max) {
                                throw UndertowMessages.MESSAGES.tooManyParameters(max);
                            }
                        } else {
                            this.handle(exchange, this.decode(charset, string.substring(stringStart, i), doDecode), "");
                            ++count;
                            if (count > max) {
                                throw UndertowMessages.MESSAGES.tooManyParameters(max);
                            }
                        }

                        stringStart = i + 1;
                        attrName = null;
                    }
                }

                if (attrName != null) {
                    this.handle(exchange, this.decode(charset, attrName, doDecode), this.decode(charset, string.substring(stringStart, string.length()), doDecode));
                    ++count;
                    if (count > max) {
                        throw UndertowMessages.MESSAGES.tooManyParameters(max);
                    }
                } else if (string.length() != stringStart) {
                    this.handle(exchange, this.decode(charset, string.substring(stringStart, string.length()), doDecode), "");
                    ++count;
                    if (count > max) {
                        throw UndertowMessages.MESSAGES.tooManyParameters(max);
                    }
                }

            } catch (UnsupportedEncodingException var11) {
                throw new RuntimeException(var11);
            }
        }